
                            "Factory" exercise:

Firstly, let's distinguish between "Abstract Factory" design pattern and "Factory Method" design pattern.
Your goal is to implement proper and functional full "Abstract Factory" design pattern to be used with the
already existing code. The essential part of this exercise is to understand how generic implementation can
help in handling the provided business case (multiple specific models to be called from one place).


                                Requirements:

BASIC:

  1. Implement concrete factory in the "ProductsFactory.cs" class
  2. Introduce new abstract factory central point (base abstract class + interface or only interface) => e.g. IFactory
  3. Use OOP principles to align and improve models of products (hint: polymorphism, "Tell Don't Ask")
  4. In the "ProductsFactory.cs" class you will find a list of products which should be supported
  5. Finish missing business logic in the "ShoppingCart.cs" implementation (CRUD: Create + Display)
  6. Finish missing declarations in the interface "ICollectingService.cs" (should not be empty)

INTERMEDIATE:

  7. Use generics <T> as a solution to extend the functionality of your factory
  8. Write unit tests to check if a specific product can be added to the shopping cart
  9. Check carefully return types for methods. Are all of them safe for the business purpose?

ADVANCED:

 10. Register "ShoppingCart" implementation for "ICollectingService" service using "AddSingleton" method from .NET Core architecture
 11. Register "ProductsFactory" implementation for newly introduced interface (service) of generic factory using "AddSingleton" method


                              Expected outcome:

- when using unit tests or input from the console (Program.cs) you can add specific products to the shopping cart
- the products can be customized but it should be very easy to use and/or extend your factory implementation
- code is clean, generic, following good practices, using consistent and reliable data types
- you understand your solution and can discuss about it (to present your way of thinking, areas to improve, advantages)
- estimated time to finish the whole exercise => 8-12 hours (aprox. 2 days)
